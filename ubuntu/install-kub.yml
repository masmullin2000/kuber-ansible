---
- hosts: all
  tasks:
    - name: Configure Kubernetes
      become_user: root
      shell: |
        cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
        overlay
        br_netfilter
        EOF

        modprobe overlay
        modprobe br_netfilter

        cat << EOF | tee /etc/sysctl.d/99-kubernetes-cri.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.ipv4.ip_forward                 = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        EOF

        sysctl --system

    - name: Get containerd
      become_user: root
      apt: 
        name: containerd
        update_cache: yes

    - name: Create /etc/containerd
      become_user: root
      file:
        path: /etc/containerd
        state: directory
        mode: 0755

    - name: Configure containerd
      become_user: root
      copy:
        src: ./config/containerdconfig.toml
        dest: /etc/containerd/config.toml
        owner: root
        group: root
        mode: '0644'
      # shell: |
      #   containerd config default | tee /etc/containerd/config.toml

    - name: Install Kubelet Kubeadm and Kubectl
      become_user: root
      shell: |
        apt install -y apt-transport-https curl
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
        cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
        deb https://apt.kubernetes.io/ kubernetes-xenial main
        EOF
        apt update
        apt install kubelet kubeadm kubectl -y
      #  apt-mark hold kubelet kubeadm kubectl

    - name: Enable Flannel
      become_user: root
      shell: |
        echo "net.bridge.bridge-nf-call-iptables=1" | tee -a /etc/sysctl.conf
        sysctl -p
        mkdir -p /run/flannel
        cat << EOF | tee /run/flannel/subnet.env
        FLANNEL_NETWORK=10.244.0.0/16
        FLANNEL_SUBNET=10.244.0.1/24
        FLANNEL_MTU=1450
        FLANNEL_IPMASQ=true
        EOF
        chmod 777 -R /run/flannel

- hosts: master
  tasks:
    - name: Initialize Cluster
      become_user: root
      shell: |
        kubeadm reset -f
        kubeadm init --pod-network-cidr=10.244.0.0/16
        echo "cgroupDriver: systemd" >> /var/lib/kubelet/config.yaml
        echo "resolvConf: /run/systemd/resolve/resolv.conf" >> /var/lib/kubelet/config.yaml
        systemctl restart kubelet

    - name: Create the kube directory
      become_user: "{{ ansible_user }}"
      file:
        path: /home/{{ansible_user}}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0755

    - name: Copy the admin config
      become_user: root
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        remote_src: yes
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'

    - name: Install Networking
      become_user: "{{ ansible_user }}"
      shell: |
        wget https://raw.githubusercontent.com/coreos/flannel/v0.13.0/Documentation/kube-flannel.yml -O .kube/kube-flannel.yml
        kubectl apply -f .kube/kube-flannel.yml
        #wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml -O .kube/kube-flannel.yml

        #wget https://docs.projectcalico.org/v3.16/manifests/calico.yaml -O .kube/calico.yml
        #kubectl apply -f .kube/calico.yml
        # wget https://docs.projectcalico.org/v3.3/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml -O .kube/rbac-kdd.yml
        # kubectl apply -f .kube/rbac-kdd.yml

    - name: Generate Token Info
      become_user: "{{ansible_user}}"
      shell: |
        kubeadm token create --print-join-command | tr -d '\n' > /home/{{ ansible_user }}/.kube/join
      #echo " --ignore-preflight-errors=SystemVerification" >> .kube/join

    - name: Copy the join command to /tmp/join
      fetch:
        dest: /tmp/join
        src: /home/{{ ansible_user }}/.kube/join
        flat: yes

- hosts: nodes
  tasks:
    - name: Change Hostname
      become_user: root
      hostname:
        name: "node{{ play_hosts.index(inventory_hostname)|int+1 }}"
    - debug: msg="{{ play_hosts.index(inventory_hostname) }}"
    - debug: msg="{{ inventory_hostname }}"

    - name: Copy the join command to the nodes
      become_user: root
      copy:
        src: /tmp/join
        dest: /tmp/join
        mode: 0755

    - name: Join the nodes to master
      become_user: root
      shell: |
        kubeadm reset -f
        sh /tmp/join
        echo "cgroupDriver: systemd" >> /var/lib/kubelet/config.yaml
        systemctl restart kubelet




